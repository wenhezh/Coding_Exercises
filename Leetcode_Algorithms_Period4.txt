Day 001, 06/07/2021 Mon

Min Cost Climbing Stairs

class Solution:
    def minCostClimbingStairs(self, cost: List[int]) -> int:
        '''
        Find the minimum cost to reach the top of the floor.
        
          -type : cost (List[int])
          -rtype: int
        '''
        l = len(cost)        # Heigh of the floor
        costed = [0] * (l+1) # Initiate an array. This array is to 
                             # record min cost of climbing to each
                             # step
        cost.append(0)       # Cost at the top is 0
        
        for i in range(2, l+1):
            costed[i] = min(costed[i-1] + cost[i-1], costed[i-2] + cost[i-2]) 
        
        return costed[-1]



Paint House

class Solution:
    def minCost(self, costs: List[List[int]]) -> int:
        '''
        Find the minimum cost to paint all houses with no adjacent houses have the same color.
        
          -type : costs (List[List[int]])
          -rtype: int
        '''
        # Create an array with ele = cost of painting [color1, color2, color3], and length of
        # the array = length of costs
        res = [[0, 0, 0] for _ in range(len(costs))]
        res[0] = costs[0]
        
        # Loop costs from start to end and find min costs at each position
        for i in range(1, len(costs)):
            res[i][0] = costs[i][0] + min(res[i-1][1], res[i-1][2])
            res[i][1] = costs[i][1] + min(res[i-1][2], res[i-1][0])
            res[i][2] = costs[i][2] + min(res[i-1][0], res[i-1][1])
        return min(res[-1])



0740. Delete and Earn

class Solution:
    def deleteAndEarn(self, nums: List[int]) -> int:
    



Day 002, 06/08/2021 Tue

0399. Evaluate Division

class Solution:
    def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -> List[float]:
        



Day 003, 06/09/2021 Wed





Day 004, 06/10/2021 Thu
Day 005, 06/11/2021 Fri
Day 006, 06/12/2021 Sat
Day 007, 06/13/2021 Sun
Day 008, 06/14/2021 Mon
Day 009, 06/15/2021 Tue
Day 010, 06/16/2021 Wed
Day 011, 06/17/2021 Thu
Day 012, 06/18/2021 Fri
Day 013, 06/19/2021 Sat
Day 014, 06/20/2021 Sun
